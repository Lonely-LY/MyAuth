# 测试环境
server:
  port: 8081
  servlet:
    context-path: /myauth

# 日志输出路径，如果是linux，直接写log即可，如果是windows，那就写，例如：C:/wwwroot/myauth/log
log-file-path: D:/idea_work/myauth/log

# mybatis-plus配置控制台打印完整带参数SQL语句
mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl


spring:
  datasource:
    url: jdbc:mysql://localhost:3306/myauthtest?serverTimezone=Asia/Shanghai
    username: myauthtest
    password: myauthtest
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      #2.连接池配置
      #初始化连接池的连接数量 大小，最小，最大
      initial-size: 5
      min-idle: 5
      max-active: 20
      #配置获取连接等待超时的时间
      max-wait: 60000
      #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 30000
      validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: true
      test-on-return: false
      # 是否缓存preparedStatement，也就是PSCache  官方建议MySQL下建议关闭   个人建议如果想用SQL防火墙 建议打开
      pool-prepared-statements: false
      max-pool-prepared-statement-per-connection-size: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filter:
        stat:
          merge-sql: true
          slow-sql-millis: 5000
      #3.基础监控配置
      web-stat-filter:
        enabled: true
        url-pattern: /*
        #设置不统计哪些URL
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
        session-stat-enable: true
        session-stat-max-count: 100
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        reset-enable: true
        #设置监控页面的登录名和密码
        login-username: admin
        login-password: admin
        allow: 127.0.0.1
        #deny: 192.168.1.100
  # redis配置
  redis:
    host: 127.0.0.1
    port: 6379
    password:
    timeout: 2000
    #数据源序号
    database: 0
    ##集群环境打开下面注释，单机不需要打开
    #cluster:
    ##集群信息
    #nodes: xxx.xxx.xxx.xxx:xxxx,xxx.xxx.xxx.xxx:xxxx,xxx.xxx.xxx.xxx:xxxx
    ##默认值是5 一般当此值设置过大时，容易报：Too many Cluster redirections
    #maxRedirects: 3
    pool:
      # 连接池最大连接数
      max-active: 200
      # 连接池最大阻塞等待时间（使用负值表示没有限制）
      max-wait: -1
      # 连接池中的最大空闲连接
      max-idle: 10
      # 连接池中的最小空闲连接
      min-idle:

  # 邮件服务器配置
  mail:
    # 邮件服务地址
    host: smtp.qq.com
    # 用户名
    username: xxxxxx@xxx.com
    # 密码
    password: xxxxxxxx
    # 发件昵称
    nickname: MyAuth授权中心
    # 编码格式
    default-encoding: UTF-8
    properties:
      mail:
        smtp:
          auth: true
          socketFactory:
            class: javax.net.ssl.SSLSocketFactory
            # 端口
            port: 465

# 邮件发送开关false关闭true开启

# 注册提醒
requestSendMail: false
# 主题名称
requestMailTheme: MyAuth授权中心注册通知
# 邮件标题
requestMailTitle: 您的授权绑定已注册成功！
# 邮件模板(templates/email/)内html文件名(不包含.html)
requestMailTemplates: authSend

# 使用卡密提醒
useCkeySendMail: false
# 主题名称
useCkeyMailTheme: MyAuth授权中心使用卡密通知
# 邮件标题
useCkeyMailTitle: 您的授权绑定已使用新的卡密！
# 邮件模板(templates/email/)内html文件名(不包含.html)
useCkeyMailTemplates: authSend

# 解绑提醒
unbindSendMail: false
# 主题名称
unbindMailTheme: MyAuth授权中心用户解绑通知
# 邮件标题
unbindMailTitle: 您的授权绑定已解绑！
# 邮件模板(templates/email/)内html文件名(不包含.html)
unbindMailTemplates: authSend

# 修改密码提醒
editPassSendMail: false
# 主题名称
editPassMailTheme: MyAuth授权中心修改密码通知
# 邮件标题
editPassMailTitle: 您的授权绑定已修改密码！
# 邮件模板(templates/email/)内html文件名(不包含.html)
editPassMailTemplates: authSend

# 修改资料：QQ和昵称提醒
editInfoSendMail: false
# 主题名称
editInfoMailTheme: MyAuth授权中心资料(QQ/昵称)修改通知
# 邮件标题
editInfoMailTitle: 您的授权绑定已修改资料(QQ/昵称)！
# 邮件模板(templates/email/)内html文件名(不包含.html)
editInfoMailTemplates: authSend

# 到期提醒(需要正常使用心跳功能)
authTimeExpiresSendMail: false
# 主题名称
authTimeExpiresMailTheme: MyAuth授权中心授权到期通知
# 邮件标题
authTimeExpiresMailTitle: 您的授权绑定已到期！
# 邮件模板(templates/email/)内html文件名(不包含.html)
authTimeExpiresMailTemplates: authSend

# 修改用户提醒(管理员后台修改)
updUserSendMail: false
# 主题名称
updUserMailTheme: MyAuth授权中心授权修改通知
# 邮件标题
updUserMailTitle: 管理员已修改你的授权信息！
# 邮件模板(templates/email/)内html文件名(不包含.html)
updUserMailTemplates: authSend

# 添加用户提醒(管理员后台添加)
addUserSendMail: false
# 主题名称
addUserMailTheme: MyAuth授权中心授权添加通知
# 邮件标题
addUserMailTitle: 管理员已添加你的授权信息！
# 邮件模板(templates/email/)内html文件名(不包含.html)
addUserMailTemplates: authSend

# 加密token的秘钥，长度必须为16位，仅支持英文和数字，不支持特殊符号和中文，不能以0开始，否则会BOOM，因为YML会把0开头的数字作为8进制对待，注入时转化为十进制注入
genKey: 1234567890123456
